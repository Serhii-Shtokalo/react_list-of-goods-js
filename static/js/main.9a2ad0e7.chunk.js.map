{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_FIELD_ALPHABET","SORT_FIELD_LENGTH","App","useState","sortField","setSortField","isReverse","setisReverse","visibleGoods","goods","sortType","reverse","preparedGoods","sort","good1","good2","localeCompare","length","getPreparesGoods","className","onClick","type","cn","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,WACtBC,EAAoB,SA2BnB,IAAMC,EAAM,WACjB,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkCF,oBAAS,GAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACMC,EA5BR,SAA0BC,EAAOC,EAAUC,GACzC,IAAMC,EAAa,YAAOH,GAqB1B,OAnBIC,GACFE,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQL,GACN,KAAKV,EACH,OAAOc,EAAME,cAAcD,GAE7B,KAAKd,EACH,OAAOa,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXN,GACFC,EAAcD,UAGTC,EAMcM,CAAiBnB,EAAiBK,EAAWE,GAOlE,OACE,sBAAKa,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMf,EAAaL,IAC5BqB,KAAK,SACLF,UAAWG,IAAG,iBAAkB,CAC9B,WAAYlB,IAAcJ,IAJ9B,iCAUA,wBACEoB,QAAS,kBAAMf,EAAaJ,IAC5BoB,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CACjC,WAAYlB,IAAcH,IAJ9B,4BAUA,wBACEmB,QAAS,kBAAMb,GAAcD,IAC7Be,KAAK,SACLF,UAAWG,IAAG,oBAAqB,CAAE,YAAahB,IAHpD,sBAQgB,KAAdF,GAAoBE,IACpB,wBACEc,QAtCQ,WAChBf,EAAa,IACbE,GAAa,IAqCLc,KAAK,SACLF,UAAU,4BAHZ,sBAUJ,6BACGX,EAAae,KAAI,SAAAC,GAAI,OACpB,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,YCjGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9a2ad0e7.chunk.js","sourcesContent":["import { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_FIELD_ALPHABET = 'alphabet';\nconst SORT_FIELD_LENGTH = 'length';\n\nfunction getPreparesGoods(goods, sortType, reverse) {\n  const preparedGoods = [...goods];\n\n  if (sortType) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortType) {\n        case SORT_FIELD_ALPHABET:\n          return good1.localeCompare(good2);\n\n        case SORT_FIELD_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (reverse) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortField, setSortField] = useState('');\n  const [isReverse, setisReverse] = useState(false);\n  const visibleGoods = getPreparesGoods(goodsFromServer, sortField, isReverse);\n\n  const resetSort = () => {\n    setSortField('');\n    setisReverse(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortField(SORT_FIELD_ALPHABET)}\n          type=\"button\"\n          className={cn('button is-info', {\n            'is-light': sortField !== SORT_FIELD_ALPHABET,\n          })}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortField(SORT_FIELD_LENGTH)}\n          type=\"button\"\n          className={cn('button is-success', {\n            'is-light': sortField !== SORT_FIELD_LENGTH,\n          })}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setisReverse(!isReverse)}\n          type=\"button\"\n          className={cn('button is-warning', { 'is-light': !isReverse })}\n        >\n          Reverse\n        </button>\n\n        {(sortField !== '' || isReverse) && (\n          <button\n            onClick={resetSort}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}